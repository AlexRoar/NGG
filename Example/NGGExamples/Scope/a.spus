push 3.14159
pop [0] ; identifier pi

; giveYouUp_0args function definition (source:2:14)
jmp giveYouUp_0args_guard
giveYouUp_0args:
push 20
pop [rex+0] ; preparing arg for func call
push 20
pop [rex+1] ; preparing arg for func call
push 6
pop [rex+2] ; preparing arg for func call
push 43
pop [rex+3] ; preparing arg for func call
call drawCircle_4args
push 20
pop [rex+0] ; preparing arg for func call
push 20
pop [rex+1] ; preparing arg for func call
push 2
pop [rex+2] ; preparing arg for func call
push 42
pop [rex+3] ; preparing arg for func call
call drawCircle_4args
push 40
pop [rex+0] ; preparing arg for func call
push 10
pop [rex+1] ; preparing arg for func call
push 3
pop [rex+2] ; preparing arg for func call
call drawCircle_3args
push 30
pop [rex+0] ; preparing arg for func call
push 10
pop [rex+1] ; preparing arg for func call
push 8
pop [rex+2] ; preparing arg for func call
push 42
pop [rex+3] ; preparing arg for func call
call drawCircle_4args
push 50
pop [rex+0] ; preparing arg for func call
push 10
pop [rex+1] ; preparing arg for func call
push 2
pop [rex+2] ; preparing arg for func call
call drawCircle_3args
push 50
pop [rex+0] ; preparing arg for func call
push 15
pop [rex+1] ; preparing arg for func call
push 7
pop [rex+2] ; preparing arg for func call
push 45
pop [rex+3] ; preparing arg for func call
call drawCircle_4args
ret
giveYouUp_0args_guard:


; drawCircle_3args function definition (source:11:14)
jmp drawCircle_3args_guard
drawCircle_3args:
push [rex+0] ; identifier x0
pop [rex+3] ; preparing arg for func call
push [rex+1] ; identifier y0
pop [rex+4] ; preparing arg for func call
push [rex+2] ; identifier r
pop [rex+5] ; preparing arg for func call
push 39
pop [rex+6] ; preparing arg for func call
; incrementing rex for 3
push 3
push rex
add
pop rex
; inc complete

call drawCircle_4args
; decrementing rex for 3
push rex
push 3
sub
pop rex
; dec complete

ret
drawCircle_3args_guard:


; drawCircle_4args function definition (source:15:14)
jmp drawCircle_4args_guard
drawCircle_4args:
push 0
pop [rex+4] ; identifier angle
push [0] ; identifier pi
push 100
div ; 17:27
pop [rex+5] ; identifier step
; processing while:19:6
lbl_19_6_begin__IAOLN:
push [rex+4] ; identifier angle
push [0] ; identifier pi
push 2
div ; 19:29
le ; <
push 0
je lbl_19_6_cont__HBRCK
; incrementing rex for 6
push 6
push rex
add
pop rex
; inc complete

push [rex-2] ; identifier angle
sin
push 2
mul ; 20:34
push [rex-4] ; identifier r
mul ; 20:37
pop [rex+0] ; identifier x
push [rex-2] ; identifier angle
cos
push [rex-4] ; identifier r
mul ; 21:34
pop [rex+1] ; identifier y
push [rex-6] ; identifier x0
push [rex+0] ; identifier x
add ; 23:21
pop rax; x coordinate
push [rex-5] ; identifier y0
push [rex+1] ; identifier y
add ; 23:30
pop rbx; y coordinate
push [rex-3] ; identifier symbol
pop rcx; pix value
pixset rax rbx rcx
rend
push [rex-6] ; identifier x0
push [rex+0] ; identifier x
sub ; 24:21
pop rax; x coordinate
push [rex-5] ; identifier y0
push [rex+1] ; identifier y
add ; 24:30
pop rbx; y coordinate
push [rex-3] ; identifier symbol
pop rcx; pix value
pixset rax rbx rcx
rend
push [rex-6] ; identifier x0
push [rex+0] ; identifier x
sub ; 25:21
pop rax; x coordinate
push [rex-5] ; identifier y0
push [rex+1] ; identifier y
sub ; 25:30
pop rbx; y coordinate
push [rex-3] ; identifier symbol
pop rcx; pix value
pixset rax rbx rcx
rend
push [rex-6] ; identifier x0
push [rex+0] ; identifier x
add ; 26:21
pop rax; x coordinate
push [rex-5] ; identifier y0
push [rex+1] ; identifier y
sub ; 26:30
pop rbx; y coordinate
push [rex-3] ; identifier symbol
pop rcx; pix value
pixset rax rbx rcx
rend
push [rex-1] ; identifier step
push [rex-2] ; identifier angle
add ; Lex_AdAssg 28:16
pop [rex-2] ; identifier angle
; decrementing rex for 6
push rex
push 6
sub
pop rex
; dec complete

jmp lbl_19_6_begin__IAOLN
lbl_19_6_cont__HBRCK:
ret
drawCircle_4args_guard:


; dre_4args function definition (source:32:14)
jmp dre_4args_guard
dre_4args:
push 0
pop [rex+4] ; identifier angle
push [0] ; identifier pi
push 100
div ; 34:27
pop [rex+5] ; identifier step
; processing while:36:6
lbl_36_6_begin__XHBQE:
push [rex+4] ; identifier angle
push [0] ; identifier pi
push 2
div ; 36:29
le ; <
push 0
je lbl_36_6_cont__AFMCD
; incrementing rex for 6
push 6
push rex
add
pop rex
; inc complete

push [rex-2] ; identifier angle
sin
push 2
mul ; 37:34
push [rex-4] ; identifier r
mul ; 37:37
pop [rex+0] ; identifier x
push [rex-2] ; identifier angle
cos
push [rex-4] ; identifier r
mul ; 38:34
pop [rex+1] ; identifier y
push [rex-6] ; identifier x0
push [rex+0] ; identifier x
add ; 40:21
pop rax; x coordinate
push [rex-5] ; identifier y0
push [rex+1] ; identifier y
add ; 40:30
pop rbx; y coordinate
push [rex-3] ; identifier symbol
pop rcx; pix value
pixset rax rbx rcx
rend
push [rex-6] ; identifier x0
push [rex+0] ; identifier x
sub ; 41:21
pop rax; x coordinate
push [rex-5] ; identifier y0
push [rex+1] ; identifier y
add ; 41:30
pop rbx; y coordinate
push [rex-3] ; identifier symbol
pop rcx; pix value
pixset rax rbx rcx
rend
push [rex-6] ; identifier x0
push [rex+0] ; identifier x
sub ; 42:21
pop rax; x coordinate
push [rex-5] ; identifier y0
push [rex+1] ; identifier y
sub ; 42:30
pop rbx; y coordinate
push [rex-3] ; identifier symbol
pop rcx; pix value
pixset rax rbx rcx
rend
push [rex-6] ; identifier x0
push [rex+0] ; identifier x
add ; 43:21
pop rax; x coordinate
push [rex-5] ; identifier y0
push [rex+1] ; identifier y
sub ; 43:30
pop rbx; y coordinate
push [rex-3] ; identifier symbol
pop rcx; pix value
pixset rax rbx rcx
rend
push [rex-1] ; identifier step
push [rex-2] ; identifier angle
add ; Lex_AdAssg 45:16
pop [rex-2] ; identifier angle
; decrementing rex for 6
push rex
push 6
sub
pop rex
; dec complete

jmp lbl_36_6_begin__XHBQE
lbl_36_6_cont__AFMCD:
ret
dre_4args_guard:

mov rex 1
call giveYouUp_0args
hlt

